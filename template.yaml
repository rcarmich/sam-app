AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  sam-app

  Sample SAM Template for sam-app

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 3

Resources:
  DynamoDBTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: Todos
      AttributeDefinitions:
        - AttributeName: title
          AttributeType: S
      KeySchema:
        - AttributeName: title
          KeyType: HASH
      BillingMode: PAY_PER_REQUEST

  GetTodoFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: todo/
      Handler: app.get_todo
      Runtime: python3.9
      Architectures:
        - x86_64
      Events:
        ToDos:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /todo
            Method: get
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref DynamoDBTable

  PutTodoFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: todo/
      Handler: app.put_todo
      Runtime: python3.9
      Architectures:
        - x86_64
      Events:
        ToDos:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /todo
            Method: put
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref DynamoDBTable

  PostTodoFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: todo/
      Handler: app.post_todo
      Runtime: python3.9
      Architectures:
        - x86_64
      Events:
        ToDos:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /todo
            Method: post
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref DynamoDBTable

  ToDosIndexFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: my_index/
      Handler: app.lambda_handler
      Runtime: python3.9
      Architectures:
        - x86_64
      Events:
        ToDos:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /
            Method: get
Outputs:
  # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
  # Find out more about other implicit resources you can reference within SAM
  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
  ToDosApi:
    Description: "API Gateway endpoint URL for Prod stage for ToDos Index function"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/"
  ToDosIndexFunction:
    Description: "ToDos Index Lambda Function ARN"
    Value: !GetAtt ToDosIndexFunction.Arn
  ToDosIndexFunctionIamRole:
    Description: "Implicit IAM Role created for ToDos Index function"
    Value: !GetAtt ToDosIndexFunctionRole.Arn
